1.
class Solution {
    /**
     * @param String $s
     * @return Integer
     */
    function romanToInt($s) {
        $count = 0;
        $array = [
            'I' => 1,
            'V' => 5,
            'X' => 10,
            'L' => 50,
            'C' => 100,
            'D' => 500,
            'M' => 1000,
            'IV' => 4,
            'IX' => 9,
            'XL' => 40,
            'XC' => 90,
            'CD' => 400,
            'CM' => 900
        ];
        for($n=0;$n<strlen($s);$n++){
            if(is_null($s[$n+1])){
            	$count = $count + $array[$s[$n]];
            }
            if(isset($array[$s[$n].$s[$n+1]])){
                $count = $count + $array[$s[$n].$s[$n+1]];
                $n++;
            }
            elseif(isset($array[$s[$n]])){
                $count = $count + $array[$s[$n]];
            }
        }
        return $count;
    }
}

2.
/**
 * @param string $roman
 *
 * @return integer
 */
public function romanToInt(string $roman): int
{
    $map = [
        'I' => 1,
        'V' => 5,
        'X' => 10,
        'L' => 50,
        'C' => 100,
        'D' => 500,
        'M' => 1000,

        // special for diy
        'v' => 4,
        'x' => 9,
        'l' => 40,
        'c' => 90,
        'd' => 400,
        'm' => 900,
    ];

    $special = [
        'IV' => 'v',
        'IX' => 'x',
        'XL' => 'l',
        'XC' => 'c',
        'CD' => 'd',
        'CM' => 'm',
    ];

    foreach ($special as $k => $v) {
        $roman = str_replace($k, $v, $roman);
    }

    $number = 0;
    $roman = str_split($roman);
    foreach ($roman as $item) {
        $number += $map[$item];
    }

    return $number;
}
